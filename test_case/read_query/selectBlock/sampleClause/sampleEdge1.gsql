#######################################################################
# 
# https://docs.tigergraph.com/gsql-ref/current/querying/select-statement/select-statement-v1#_sample_clause
# SYNTAX v2 not supported yet
# Sample results are random, only check the size of the results
# SAMPLE expr EDGE: expr value coverage
CREATE OR REPLACE QUERY  sampleClause_sampleEdge101(DATETIME date, INT num) SYNTAX v1 {
   MaxAccum<INT> @@maxId;
   SetAccum<INT> @@toId, @@toId2;
   SumAccum<INT> @@ops;
   P = SELECT s FROM (Person):s
     WHERE s.creationDate < date;
   # expr is a parameter
   # GLE-3423: it seems only universal Edge works
   S1 = SELECT s FROM P:s -(:e)-> :t
      SAMPLE num EDGE WHEN s.outdegree() > 10
      ACCUM
         @@maxId += s.id,
         @@toId += t.id,
         @@ops += 1;
   
   T1 = SELECT t FROM P:s -(:e)-> :t
      SAMPLE num EDGE WHEN s.outdegree() > 10
      POST-ACCUM
         @@toId2 += t.id;
   
   PRINT P.size();
   IF num > 0 THEN # skip compare if expr is negative
      PRINT @@ops;
   END;
}
# SAMPLE expr EDGE: expr type coverage
CREATE OR REPLACE QUERY  sampleClause_sampleEdge102(DATETIME date) SYNTAX v1 {
   MaxAccum<INT> @@maxId;
   SetAccum<INT> @@toId, @@toId2;
   SumAccum<INT> @@ops;
   # expr is a constant
   INT num2 = 2;
   SumAccum<INT> @@sum = 0;
   P = SELECT s FROM (Person):s
     WHERE s.creationDate < date
     ACCUM @@sum += 1;

   T1 = SELECT s FROM P:s -(:e)-> :t
      SAMPLE num2 EDGE WHEN s.outdegree() > 10
      ACCUM
         @@maxId += s.id,
         @@toId += t.id,
         @@ops += 1
      POST-ACCUM
         @@toId2 += t.id;
   
   PRINT P.size();
   PRINT @@sum;
   PRINT @@ops;
   @@ops = 0;
   # expr is an Accum
   T1 = SELECT s FROM P:s -(:e)-> :t
      SAMPLE (@@sum*@@sum/2) EDGE WHEN s.outdegree() > 10
      ACCUM
         @@maxId += s.id,
         @@toId += t.id,
         @@ops += 1
      POST-ACCUM
         @@toId2 += t.id;
   
   PRINT P.size();
   PRINT @@sum;
   PRINT @@ops;
}

# SAMPLE expr % EDGE: expr value coverage
CREATE OR REPLACE QUERY  sampleClause_sampleEdge103(DATETIME date, INT percentage) SYNTAX v1 {
   MaxAccum<INT> @@maxId;
   SetAccum<INT> @@toId, @@toId2;
   SumAccum<INT> @@ops;
   P = SELECT s FROM (Person):s
     WHERE s.creationDate < date;
   # expr is a parameter
   S1 = SELECT s FROM P:s -(:e)-> :t
      SAMPLE percentage*10 % EDGE WHEN s.outdegree() > 10
      ACCUM
         @@maxId += s.id,
         @@toId += t.id,
         @@ops += 1;
   
   T1 = SELECT t FROM P:s -(:e)-> :t
      SAMPLE percentage*10 % EDGE WHEN s.outdegree() > 10
      POST-ACCUM
         @@toId2 += t.id;
   
   PRINT P.size();
}
# SAMPLE expr EDGE: expr type coverage
CREATE OR REPLACE QUERY  sampleClause_sampleEdge104(DATETIME date) SYNTAX v1 {
   MaxAccum<INT> @@maxId;
   SetAccum<INT> @@toId, @@toId2;
   SumAccum<INT> @@ops;
   # expr is a constant
   INT percentage2 = 2;
   SumAccum<INT> @@sum = 0;
   P = SELECT s FROM (Person):s
     WHERE s.creationDate < date
     ACCUM @@sum += 1;

   T1 = SELECT s FROM P:s -(:e)-> :t
      SAMPLE percentage2*10 % EDGE WHEN s.outdegree() > 10
      ACCUM
         @@maxId += s.id,
         @@toId += t.id,
         @@ops += 1
      POST-ACCUM
         @@toId2 += t.id;
   
   PRINT P.size();
   PRINT @@sum;
   #PRINT @@ops;
   @@ops = 0;
   # expr is an Accum
   T1 = SELECT s FROM P:s -(:e)-> :t
      SAMPLE (@@sum*@@sum/2)*10 % EDGE WHEN s.outdegree() > 10
      ACCUM
         @@maxId += s.id,
         @@toId += t.id,
         @@ops += 1
      POST-ACCUM
         @@toId2 += t.id;
   
   PRINT P.size();
   PRINT @@sum;
   #PRINT @@ops;
}